openapi: 3.0.0
info:
  title: AuthServ
  version: 0.0.1-SNAPSHOT
  description: |
    SSO service based on JWT
servers:
  - url: http://localhost:8000
    description: Development server
paths:
  /auth/login:
    post:
      summary: Obtain a JWT token using basic credentials
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/basic"
      responses:
        "200":
          $ref: "#/components/responses/session"
        "401":
          $ref: "#/components/responses/unauthorised"

  /auth/register:
    post:
      summary: Register a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/register"
      responses:
        "200":
          description: OK
        "401":
          $ref: "#/components/responses/unauthorised"

  /auth/refresh:
    post:
      summary: Obtain a JWT token using a refresh token
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/refresh"
      responses:
        "200":
          $ref: "#/components/responses/session"
        "401":
          $ref: "#/components/responses/unauthorised"

  /auth/check:
    get:
      summary: Check if the user is logged in
      security:
        - bearer: [ ]
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/check"
        "401":
          $ref: "#/components/responses/unauthorised"

components:
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
      bearerFormat: JWT
  responses:
    unauthorised:
      description: "Unauthorised: Access token is missing or invalid"
    session:
      description: OK
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/session"
  schemas:
    basic:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    register:
      type: object
      properties:
        username:
          type: string
        password:
          type: string
    refresh:
      type: object
      properties:
        refresh_token:
          type: string
        username:
          type: string
    session:
      type: object
      properties:
        access_token:
          type: string
        refresh_token:
          type: string
        expires_in:
          type: number
        token_type:
          type: string
          enum: [ "Bearer" ]
    check:
      type: object
      properties:
        name:
          type: string
        authorities:
          type: array
          items:
            type: string
